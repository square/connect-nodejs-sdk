/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */

var ApiClient = require('./ApiClient');
var AdditionalRecipient = require('./model/AdditionalRecipient');
var AdditionalRecipientReceivable = require('./model/AdditionalRecipientReceivable');
var AdditionalRecipientReceivableRefund = require('./model/AdditionalRecipientReceivableRefund');
var Address = require('./model/Address');
var BatchChangeInventoryRequest = require('./model/BatchChangeInventoryRequest');
var BatchChangeInventoryResponse = require('./model/BatchChangeInventoryResponse');
var BatchDeleteCatalogObjectsRequest = require('./model/BatchDeleteCatalogObjectsRequest');
var BatchDeleteCatalogObjectsResponse = require('./model/BatchDeleteCatalogObjectsResponse');
var BatchRetrieveCatalogObjectsRequest = require('./model/BatchRetrieveCatalogObjectsRequest');
var BatchRetrieveCatalogObjectsResponse = require('./model/BatchRetrieveCatalogObjectsResponse');
var BatchRetrieveInventoryChangesRequest = require('./model/BatchRetrieveInventoryChangesRequest');
var BatchRetrieveInventoryChangesResponse = require('./model/BatchRetrieveInventoryChangesResponse');
var BatchRetrieveInventoryCountsRequest = require('./model/BatchRetrieveInventoryCountsRequest');
var BatchRetrieveInventoryCountsResponse = require('./model/BatchRetrieveInventoryCountsResponse');
var BatchRetrieveOrdersRequest = require('./model/BatchRetrieveOrdersRequest');
var BatchRetrieveOrdersResponse = require('./model/BatchRetrieveOrdersResponse');
var BatchUpsertCatalogObjectsRequest = require('./model/BatchUpsertCatalogObjectsRequest');
var BatchUpsertCatalogObjectsResponse = require('./model/BatchUpsertCatalogObjectsResponse');
var CaptureTransactionRequest = require('./model/CaptureTransactionRequest');
var CaptureTransactionResponse = require('./model/CaptureTransactionResponse');
var Card = require('./model/Card');
var CardBrand = require('./model/CardBrand');
var CatalogCategory = require('./model/CatalogCategory');
var CatalogDiscount = require('./model/CatalogDiscount');
var CatalogDiscountType = require('./model/CatalogDiscountType');
var CatalogIdMapping = require('./model/CatalogIdMapping');
var CatalogInfoRequest = require('./model/CatalogInfoRequest');
var CatalogInfoResponse = require('./model/CatalogInfoResponse');
var CatalogInfoResponseLimits = require('./model/CatalogInfoResponseLimits');
var CatalogItem = require('./model/CatalogItem');
var CatalogItemModifierListInfo = require('./model/CatalogItemModifierListInfo');
var CatalogItemProductType = require('./model/CatalogItemProductType');
var CatalogItemVariation = require('./model/CatalogItemVariation');
var CatalogModifier = require('./model/CatalogModifier');
var CatalogModifierList = require('./model/CatalogModifierList');
var CatalogModifierListSelectionType = require('./model/CatalogModifierListSelectionType');
var CatalogModifierOverride = require('./model/CatalogModifierOverride');
var CatalogObject = require('./model/CatalogObject');
var CatalogObjectBatch = require('./model/CatalogObjectBatch');
var CatalogObjectType = require('./model/CatalogObjectType');
var CatalogPricingType = require('./model/CatalogPricingType');
var CatalogQuery = require('./model/CatalogQuery');
var CatalogQueryExact = require('./model/CatalogQueryExact');
var CatalogQueryItemsForModifierList = require('./model/CatalogQueryItemsForModifierList');
var CatalogQueryItemsForTax = require('./model/CatalogQueryItemsForTax');
var CatalogQueryPrefix = require('./model/CatalogQueryPrefix');
var CatalogQueryRange = require('./model/CatalogQueryRange');
var CatalogQuerySortedAttribute = require('./model/CatalogQuerySortedAttribute');
var CatalogQueryText = require('./model/CatalogQueryText');
var CatalogTax = require('./model/CatalogTax');
var CatalogV1Id = require('./model/CatalogV1Id');
var ChargeRequest = require('./model/ChargeRequest');
var ChargeRequestAdditionalRecipient = require('./model/ChargeRequestAdditionalRecipient');
var ChargeResponse = require('./model/ChargeResponse');
var Checkout = require('./model/Checkout');
var Country = require('./model/Country');
var CreateCheckoutRequest = require('./model/CreateCheckoutRequest');
var CreateCheckoutResponse = require('./model/CreateCheckoutResponse');
var CreateCustomerCardRequest = require('./model/CreateCustomerCardRequest');
var CreateCustomerCardResponse = require('./model/CreateCustomerCardResponse');
var CreateCustomerRequest = require('./model/CreateCustomerRequest');
var CreateCustomerResponse = require('./model/CreateCustomerResponse');
var CreateMobileAuthorizationCodeRequest = require('./model/CreateMobileAuthorizationCodeRequest');
var CreateMobileAuthorizationCodeResponse = require('./model/CreateMobileAuthorizationCodeResponse');
var CreateOrderRequest = require('./model/CreateOrderRequest');
var CreateOrderRequestDiscount = require('./model/CreateOrderRequestDiscount');
var CreateOrderRequestLineItem = require('./model/CreateOrderRequestLineItem');
var CreateOrderRequestModifier = require('./model/CreateOrderRequestModifier');
var CreateOrderRequestTax = require('./model/CreateOrderRequestTax');
var CreateOrderResponse = require('./model/CreateOrderResponse');
var CreateRefundRequest = require('./model/CreateRefundRequest');
var CreateRefundResponse = require('./model/CreateRefundResponse');
var Currency = require('./model/Currency');
var Customer = require('./model/Customer');
var CustomerCreationSource = require('./model/CustomerCreationSource');
var CustomerCreationSourceFilter = require('./model/CustomerCreationSourceFilter');
var CustomerFilter = require('./model/CustomerFilter');
var CustomerGroupInfo = require('./model/CustomerGroupInfo');
var CustomerInclusionExclusion = require('./model/CustomerInclusionExclusion');
var CustomerPreferences = require('./model/CustomerPreferences');
var CustomerQuery = require('./model/CustomerQuery');
var CustomerSort = require('./model/CustomerSort');
var CustomerSortField = require('./model/CustomerSortField');
var DeleteCatalogObjectRequest = require('./model/DeleteCatalogObjectRequest');
var DeleteCatalogObjectResponse = require('./model/DeleteCatalogObjectResponse');
var DeleteCustomerCardRequest = require('./model/DeleteCustomerCardRequest');
var DeleteCustomerCardResponse = require('./model/DeleteCustomerCardResponse');
var DeleteCustomerRequest = require('./model/DeleteCustomerRequest');
var DeleteCustomerResponse = require('./model/DeleteCustomerResponse');
var Device = require('./model/Device');
var Error = require('./model/Error');
var ErrorCategory = require('./model/ErrorCategory');
var ErrorCode = require('./model/ErrorCode');
var InventoryAdjustment = require('./model/InventoryAdjustment');
var InventoryAlertType = require('./model/InventoryAlertType');
var InventoryChange = require('./model/InventoryChange');
var InventoryChangeType = require('./model/InventoryChangeType');
var InventoryCount = require('./model/InventoryCount');
var InventoryPhysicalCount = require('./model/InventoryPhysicalCount');
var InventoryState = require('./model/InventoryState');
var InventoryTransfer = require('./model/InventoryTransfer');
var ItemVariationLocationOverrides = require('./model/ItemVariationLocationOverrides');
var ListAdditionalRecipientReceivableRefundsRequest = require('./model/ListAdditionalRecipientReceivableRefundsRequest');
var ListAdditionalRecipientReceivableRefundsResponse = require('./model/ListAdditionalRecipientReceivableRefundsResponse');
var ListAdditionalRecipientReceivablesRequest = require('./model/ListAdditionalRecipientReceivablesRequest');
var ListAdditionalRecipientReceivablesResponse = require('./model/ListAdditionalRecipientReceivablesResponse');
var ListCatalogRequest = require('./model/ListCatalogRequest');
var ListCatalogResponse = require('./model/ListCatalogResponse');
var ListCustomersRequest = require('./model/ListCustomersRequest');
var ListCustomersResponse = require('./model/ListCustomersResponse');
var ListLocationsRequest = require('./model/ListLocationsRequest');
var ListLocationsResponse = require('./model/ListLocationsResponse');
var ListRefundsRequest = require('./model/ListRefundsRequest');
var ListRefundsResponse = require('./model/ListRefundsResponse');
var ListTransactionsRequest = require('./model/ListTransactionsRequest');
var ListTransactionsResponse = require('./model/ListTransactionsResponse');
var Location = require('./model/Location');
var LocationCapability = require('./model/LocationCapability');
var LocationStatus = require('./model/LocationStatus');
var LocationType = require('./model/LocationType');
var Money = require('./model/Money');
var ObtainTokenRequest = require('./model/ObtainTokenRequest');
var ObtainTokenResponse = require('./model/ObtainTokenResponse');
var Order = require('./model/Order');
var OrderLineItem = require('./model/OrderLineItem');
var OrderLineItemDiscount = require('./model/OrderLineItemDiscount');
var OrderLineItemDiscountScope = require('./model/OrderLineItemDiscountScope');
var OrderLineItemDiscountType = require('./model/OrderLineItemDiscountType');
var OrderLineItemModifier = require('./model/OrderLineItemModifier');
var OrderLineItemTax = require('./model/OrderLineItemTax');
var OrderLineItemTaxType = require('./model/OrderLineItemTaxType');
var Product = require('./model/Product');
var Refund = require('./model/Refund');
var RefundStatus = require('./model/RefundStatus');
var RegisterDomainRequest = require('./model/RegisterDomainRequest');
var RegisterDomainResponse = require('./model/RegisterDomainResponse');
var RegisterDomainResponseStatus = require('./model/RegisterDomainResponseStatus');
var RenewTokenRequest = require('./model/RenewTokenRequest');
var RenewTokenResponse = require('./model/RenewTokenResponse');
var RetrieveCatalogObjectRequest = require('./model/RetrieveCatalogObjectRequest');
var RetrieveCatalogObjectResponse = require('./model/RetrieveCatalogObjectResponse');
var RetrieveCustomerRequest = require('./model/RetrieveCustomerRequest');
var RetrieveCustomerResponse = require('./model/RetrieveCustomerResponse');
var RetrieveInventoryAdjustmentRequest = require('./model/RetrieveInventoryAdjustmentRequest');
var RetrieveInventoryAdjustmentResponse = require('./model/RetrieveInventoryAdjustmentResponse');
var RetrieveInventoryChangesRequest = require('./model/RetrieveInventoryChangesRequest');
var RetrieveInventoryChangesResponse = require('./model/RetrieveInventoryChangesResponse');
var RetrieveInventoryCountRequest = require('./model/RetrieveInventoryCountRequest');
var RetrieveInventoryCountResponse = require('./model/RetrieveInventoryCountResponse');
var RetrieveInventoryPhysicalCountRequest = require('./model/RetrieveInventoryPhysicalCountRequest');
var RetrieveInventoryPhysicalCountResponse = require('./model/RetrieveInventoryPhysicalCountResponse');
var RetrieveTransactionRequest = require('./model/RetrieveTransactionRequest');
var RetrieveTransactionResponse = require('./model/RetrieveTransactionResponse');
var RevokeTokenRequest = require('./model/RevokeTokenRequest');
var RevokeTokenResponse = require('./model/RevokeTokenResponse');
var SearchCatalogObjectsRequest = require('./model/SearchCatalogObjectsRequest');
var SearchCatalogObjectsResponse = require('./model/SearchCatalogObjectsResponse');
var SearchCustomersRequest = require('./model/SearchCustomersRequest');
var SearchCustomersResponse = require('./model/SearchCustomersResponse');
var SortOrder = require('./model/SortOrder');
var SourceApplication = require('./model/SourceApplication');
var TaxCalculationPhase = require('./model/TaxCalculationPhase');
var TaxInclusionType = require('./model/TaxInclusionType');
var Tender = require('./model/Tender');
var TenderCardDetails = require('./model/TenderCardDetails');
var TenderCardDetailsEntryMethod = require('./model/TenderCardDetailsEntryMethod');
var TenderCardDetailsStatus = require('./model/TenderCardDetailsStatus');
var TenderCashDetails = require('./model/TenderCashDetails');
var TenderType = require('./model/TenderType');
var TimeRange = require('./model/TimeRange');
var Transaction = require('./model/Transaction');
var TransactionProduct = require('./model/TransactionProduct');
var UpdateCustomerRequest = require('./model/UpdateCustomerRequest');
var UpdateCustomerResponse = require('./model/UpdateCustomerResponse');
var UpdateItemModifierListsRequest = require('./model/UpdateItemModifierListsRequest');
var UpdateItemModifierListsResponse = require('./model/UpdateItemModifierListsResponse');
var UpdateItemTaxesRequest = require('./model/UpdateItemTaxesRequest');
var UpdateItemTaxesResponse = require('./model/UpdateItemTaxesResponse');
var UpsertCatalogObjectRequest = require('./model/UpsertCatalogObjectRequest');
var UpsertCatalogObjectResponse = require('./model/UpsertCatalogObjectResponse');
var V1AdjustInventoryRequest = require('./model/V1AdjustInventoryRequest');
var V1BankAccount = require('./model/V1BankAccount');
var V1CashDrawerEvent = require('./model/V1CashDrawerEvent');
var V1CashDrawerShift = require('./model/V1CashDrawerShift');
var V1Category = require('./model/V1Category');
var V1CreateRefundRequest = require('./model/V1CreateRefundRequest');
var V1Discount = require('./model/V1Discount');
var V1Employee = require('./model/V1Employee');
var V1EmployeeRole = require('./model/V1EmployeeRole');
var V1Fee = require('./model/V1Fee');
var V1InventoryEntry = require('./model/V1InventoryEntry');
var V1Item = require('./model/V1Item');
var V1ItemImage = require('./model/V1ItemImage');
var V1Merchant = require('./model/V1Merchant');
var V1MerchantLocationDetails = require('./model/V1MerchantLocationDetails');
var V1ModifierList = require('./model/V1ModifierList');
var V1ModifierOption = require('./model/V1ModifierOption');
var V1Money = require('./model/V1Money');
var V1Order = require('./model/V1Order');
var V1OrderHistoryEntry = require('./model/V1OrderHistoryEntry');
var V1Page = require('./model/V1Page');
var V1PageCell = require('./model/V1PageCell');
var V1Payment = require('./model/V1Payment');
var V1PaymentDiscount = require('./model/V1PaymentDiscount');
var V1PaymentItemDetail = require('./model/V1PaymentItemDetail');
var V1PaymentItemization = require('./model/V1PaymentItemization');
var V1PaymentModifier = require('./model/V1PaymentModifier');
var V1PaymentSurcharge = require('./model/V1PaymentSurcharge');
var V1PaymentTax = require('./model/V1PaymentTax');
var V1PhoneNumber = require('./model/V1PhoneNumber');
var V1Refund = require('./model/V1Refund');
var V1Settlement = require('./model/V1Settlement');
var V1SettlementEntry = require('./model/V1SettlementEntry');
var V1Tender = require('./model/V1Tender');
var V1Timecard = require('./model/V1Timecard');
var V1TimecardEvent = require('./model/V1TimecardEvent');
var V1UpdateModifierListRequest = require('./model/V1UpdateModifierListRequest');
var V1UpdateOrderRequest = require('./model/V1UpdateOrderRequest');
var V1Variation = require('./model/V1Variation');
var VoidTransactionRequest = require('./model/VoidTransactionRequest');
var VoidTransactionResponse = require('./model/VoidTransactionResponse');

var ApplePayApi = require('./api/ApplePayApi');
var CatalogApi = require('./api/CatalogApi');
var CheckoutApi = require('./api/CheckoutApi');
var CustomersApi = require('./api/CustomersApi');
var InventoryApi = require('./api/InventoryApi');
var LocationsApi = require('./api/LocationsApi');
var MobileAuthorizationApi = require('./api/MobileAuthorizationApi');
var OAuthApi = require('./api/OAuthApi');
var OrdersApi = require('./api/OrdersApi');
var ReportingApi = require('./api/ReportingApi');
var TransactionsApi = require('./api/TransactionsApi');
var V1EmployeesApi = require('./api/V1EmployeesApi');
var V1ItemsApi = require('./api/V1ItemsApi');
var V1LocationsApi = require('./api/V1LocationsApi');
var V1TransactionsApi = require('./api/V1TransactionsApi');


/**
 * JavaScript client library for the Square Connect v2 API.<br>
 * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
 * <p>
 * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
 * <pre>
 * var SquareConnect = require('index'); // See note below*.
 * var xxxSvc = new SquareConnect.XxxApi(); // Allocate the API class we're going to use.
 * var yyyModel = new SquareConnect.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
 * and put the application logic within the callback function.</em>
 * </p>
 * <p>
 * A non-AMD browser application (discouraged) might do something like this:
 * <pre>
 * var xxxSvc = new SquareConnect.XxxApi(); // Allocate the API class we're going to use.
 * var yyy = new SquareConnect.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * </p>
 * @module index
 * @version 2.20180918.1
 */
  module.exports = {
  /**
   * The ApiClient constructor.
   * @property {module:ApiClient}
   */
  ApiClient: ApiClient,
  /**
   * The AdditionalRecipient model constructor.
   * @property {module:model/AdditionalRecipient}
   */
  AdditionalRecipient: AdditionalRecipient,
  /**
   * The AdditionalRecipientReceivable model constructor.
   * @property {module:model/AdditionalRecipientReceivable}
   */
  AdditionalRecipientReceivable: AdditionalRecipientReceivable,
  /**
   * The AdditionalRecipientReceivableRefund model constructor.
   * @property {module:model/AdditionalRecipientReceivableRefund}
   */
  AdditionalRecipientReceivableRefund: AdditionalRecipientReceivableRefund,
  /**
   * The Address model constructor.
   * @property {module:model/Address}
   */
  Address: Address,
  /**
   * The BatchChangeInventoryRequest model constructor.
   * @property {module:model/BatchChangeInventoryRequest}
   */
  BatchChangeInventoryRequest: BatchChangeInventoryRequest,
  /**
   * The BatchChangeInventoryResponse model constructor.
   * @property {module:model/BatchChangeInventoryResponse}
   */
  BatchChangeInventoryResponse: BatchChangeInventoryResponse,
  /**
   * The BatchDeleteCatalogObjectsRequest model constructor.
   * @property {module:model/BatchDeleteCatalogObjectsRequest}
   */
  BatchDeleteCatalogObjectsRequest: BatchDeleteCatalogObjectsRequest,
  /**
   * The BatchDeleteCatalogObjectsResponse model constructor.
   * @property {module:model/BatchDeleteCatalogObjectsResponse}
   */
  BatchDeleteCatalogObjectsResponse: BatchDeleteCatalogObjectsResponse,
  /**
   * The BatchRetrieveCatalogObjectsRequest model constructor.
   * @property {module:model/BatchRetrieveCatalogObjectsRequest}
   */
  BatchRetrieveCatalogObjectsRequest: BatchRetrieveCatalogObjectsRequest,
  /**
   * The BatchRetrieveCatalogObjectsResponse model constructor.
   * @property {module:model/BatchRetrieveCatalogObjectsResponse}
   */
  BatchRetrieveCatalogObjectsResponse: BatchRetrieveCatalogObjectsResponse,
  /**
   * The BatchRetrieveInventoryChangesRequest model constructor.
   * @property {module:model/BatchRetrieveInventoryChangesRequest}
   */
  BatchRetrieveInventoryChangesRequest: BatchRetrieveInventoryChangesRequest,
  /**
   * The BatchRetrieveInventoryChangesResponse model constructor.
   * @property {module:model/BatchRetrieveInventoryChangesResponse}
   */
  BatchRetrieveInventoryChangesResponse: BatchRetrieveInventoryChangesResponse,
  /**
   * The BatchRetrieveInventoryCountsRequest model constructor.
   * @property {module:model/BatchRetrieveInventoryCountsRequest}
   */
  BatchRetrieveInventoryCountsRequest: BatchRetrieveInventoryCountsRequest,
  /**
   * The BatchRetrieveInventoryCountsResponse model constructor.
   * @property {module:model/BatchRetrieveInventoryCountsResponse}
   */
  BatchRetrieveInventoryCountsResponse: BatchRetrieveInventoryCountsResponse,
  /**
   * The BatchRetrieveOrdersRequest model constructor.
   * @property {module:model/BatchRetrieveOrdersRequest}
   */
  BatchRetrieveOrdersRequest: BatchRetrieveOrdersRequest,
  /**
   * The BatchRetrieveOrdersResponse model constructor.
   * @property {module:model/BatchRetrieveOrdersResponse}
   */
  BatchRetrieveOrdersResponse: BatchRetrieveOrdersResponse,
  /**
   * The BatchUpsertCatalogObjectsRequest model constructor.
   * @property {module:model/BatchUpsertCatalogObjectsRequest}
   */
  BatchUpsertCatalogObjectsRequest: BatchUpsertCatalogObjectsRequest,
  /**
   * The BatchUpsertCatalogObjectsResponse model constructor.
   * @property {module:model/BatchUpsertCatalogObjectsResponse}
   */
  BatchUpsertCatalogObjectsResponse: BatchUpsertCatalogObjectsResponse,
  /**
   * The CaptureTransactionRequest model constructor.
   * @property {module:model/CaptureTransactionRequest}
   */
  CaptureTransactionRequest: CaptureTransactionRequest,
  /**
   * The CaptureTransactionResponse model constructor.
   * @property {module:model/CaptureTransactionResponse}
   */
  CaptureTransactionResponse: CaptureTransactionResponse,
  /**
   * The Card model constructor.
   * @property {module:model/Card}
   */
  Card: Card,
  /**
   * The CardBrand model constructor.
   * @property {module:model/CardBrand}
   */
  CardBrand: CardBrand,
  /**
   * The CatalogCategory model constructor.
   * @property {module:model/CatalogCategory}
   */
  CatalogCategory: CatalogCategory,
  /**
   * The CatalogDiscount model constructor.
   * @property {module:model/CatalogDiscount}
   */
  CatalogDiscount: CatalogDiscount,
  /**
   * The CatalogDiscountType model constructor.
   * @property {module:model/CatalogDiscountType}
   */
  CatalogDiscountType: CatalogDiscountType,
  /**
   * The CatalogIdMapping model constructor.
   * @property {module:model/CatalogIdMapping}
   */
  CatalogIdMapping: CatalogIdMapping,
  /**
   * The CatalogInfoRequest model constructor.
   * @property {module:model/CatalogInfoRequest}
   */
  CatalogInfoRequest: CatalogInfoRequest,
  /**
   * The CatalogInfoResponse model constructor.
   * @property {module:model/CatalogInfoResponse}
   */
  CatalogInfoResponse: CatalogInfoResponse,
  /**
   * The CatalogInfoResponseLimits model constructor.
   * @property {module:model/CatalogInfoResponseLimits}
   */
  CatalogInfoResponseLimits: CatalogInfoResponseLimits,
  /**
   * The CatalogItem model constructor.
   * @property {module:model/CatalogItem}
   */
  CatalogItem: CatalogItem,
  /**
   * The CatalogItemModifierListInfo model constructor.
   * @property {module:model/CatalogItemModifierListInfo}
   */
  CatalogItemModifierListInfo: CatalogItemModifierListInfo,
  /**
   * The CatalogItemProductType model constructor.
   * @property {module:model/CatalogItemProductType}
   */
  CatalogItemProductType: CatalogItemProductType,
  /**
   * The CatalogItemVariation model constructor.
   * @property {module:model/CatalogItemVariation}
   */
  CatalogItemVariation: CatalogItemVariation,
  /**
   * The CatalogModifier model constructor.
   * @property {module:model/CatalogModifier}
   */
  CatalogModifier: CatalogModifier,
  /**
   * The CatalogModifierList model constructor.
   * @property {module:model/CatalogModifierList}
   */
  CatalogModifierList: CatalogModifierList,
  /**
   * The CatalogModifierListSelectionType model constructor.
   * @property {module:model/CatalogModifierListSelectionType}
   */
  CatalogModifierListSelectionType: CatalogModifierListSelectionType,
  /**
   * The CatalogModifierOverride model constructor.
   * @property {module:model/CatalogModifierOverride}
   */
  CatalogModifierOverride: CatalogModifierOverride,
  /**
   * The CatalogObject model constructor.
   * @property {module:model/CatalogObject}
   */
  CatalogObject: CatalogObject,
  /**
   * The CatalogObjectBatch model constructor.
   * @property {module:model/CatalogObjectBatch}
   */
  CatalogObjectBatch: CatalogObjectBatch,
  /**
   * The CatalogObjectType model constructor.
   * @property {module:model/CatalogObjectType}
   */
  CatalogObjectType: CatalogObjectType,
  /**
   * The CatalogPricingType model constructor.
   * @property {module:model/CatalogPricingType}
   */
  CatalogPricingType: CatalogPricingType,
  /**
   * The CatalogQuery model constructor.
   * @property {module:model/CatalogQuery}
   */
  CatalogQuery: CatalogQuery,
  /**
   * The CatalogQueryExact model constructor.
   * @property {module:model/CatalogQueryExact}
   */
  CatalogQueryExact: CatalogQueryExact,
  /**
   * The CatalogQueryItemsForModifierList model constructor.
   * @property {module:model/CatalogQueryItemsForModifierList}
   */
  CatalogQueryItemsForModifierList: CatalogQueryItemsForModifierList,
  /**
   * The CatalogQueryItemsForTax model constructor.
   * @property {module:model/CatalogQueryItemsForTax}
   */
  CatalogQueryItemsForTax: CatalogQueryItemsForTax,
  /**
   * The CatalogQueryPrefix model constructor.
   * @property {module:model/CatalogQueryPrefix}
   */
  CatalogQueryPrefix: CatalogQueryPrefix,
  /**
   * The CatalogQueryRange model constructor.
   * @property {module:model/CatalogQueryRange}
   */
  CatalogQueryRange: CatalogQueryRange,
  /**
   * The CatalogQuerySortedAttribute model constructor.
   * @property {module:model/CatalogQuerySortedAttribute}
   */
  CatalogQuerySortedAttribute: CatalogQuerySortedAttribute,
  /**
   * The CatalogQueryText model constructor.
   * @property {module:model/CatalogQueryText}
   */
  CatalogQueryText: CatalogQueryText,
  /**
   * The CatalogTax model constructor.
   * @property {module:model/CatalogTax}
   */
  CatalogTax: CatalogTax,
  /**
   * The CatalogV1Id model constructor.
   * @property {module:model/CatalogV1Id}
   */
  CatalogV1Id: CatalogV1Id,
  /**
   * The ChargeRequest model constructor.
   * @property {module:model/ChargeRequest}
   */
  ChargeRequest: ChargeRequest,
  /**
   * The ChargeRequestAdditionalRecipient model constructor.
   * @property {module:model/ChargeRequestAdditionalRecipient}
   */
  ChargeRequestAdditionalRecipient: ChargeRequestAdditionalRecipient,
  /**
   * The ChargeResponse model constructor.
   * @property {module:model/ChargeResponse}
   */
  ChargeResponse: ChargeResponse,
  /**
   * The Checkout model constructor.
   * @property {module:model/Checkout}
   */
  Checkout: Checkout,
  /**
   * The Country model constructor.
   * @property {module:model/Country}
   */
  Country: Country,
  /**
   * The CreateCheckoutRequest model constructor.
   * @property {module:model/CreateCheckoutRequest}
   */
  CreateCheckoutRequest: CreateCheckoutRequest,
  /**
   * The CreateCheckoutResponse model constructor.
   * @property {module:model/CreateCheckoutResponse}
   */
  CreateCheckoutResponse: CreateCheckoutResponse,
  /**
   * The CreateCustomerCardRequest model constructor.
   * @property {module:model/CreateCustomerCardRequest}
   */
  CreateCustomerCardRequest: CreateCustomerCardRequest,
  /**
   * The CreateCustomerCardResponse model constructor.
   * @property {module:model/CreateCustomerCardResponse}
   */
  CreateCustomerCardResponse: CreateCustomerCardResponse,
  /**
   * The CreateCustomerRequest model constructor.
   * @property {module:model/CreateCustomerRequest}
   */
  CreateCustomerRequest: CreateCustomerRequest,
  /**
   * The CreateCustomerResponse model constructor.
   * @property {module:model/CreateCustomerResponse}
   */
  CreateCustomerResponse: CreateCustomerResponse,
  /**
   * The CreateMobileAuthorizationCodeRequest model constructor.
   * @property {module:model/CreateMobileAuthorizationCodeRequest}
   */
  CreateMobileAuthorizationCodeRequest: CreateMobileAuthorizationCodeRequest,
  /**
   * The CreateMobileAuthorizationCodeResponse model constructor.
   * @property {module:model/CreateMobileAuthorizationCodeResponse}
   */
  CreateMobileAuthorizationCodeResponse: CreateMobileAuthorizationCodeResponse,
  /**
   * The CreateOrderRequest model constructor.
   * @property {module:model/CreateOrderRequest}
   */
  CreateOrderRequest: CreateOrderRequest,
  /**
   * The CreateOrderRequestDiscount model constructor.
   * @property {module:model/CreateOrderRequestDiscount}
   */
  CreateOrderRequestDiscount: CreateOrderRequestDiscount,
  /**
   * The CreateOrderRequestLineItem model constructor.
   * @property {module:model/CreateOrderRequestLineItem}
   */
  CreateOrderRequestLineItem: CreateOrderRequestLineItem,
  /**
   * The CreateOrderRequestModifier model constructor.
   * @property {module:model/CreateOrderRequestModifier}
   */
  CreateOrderRequestModifier: CreateOrderRequestModifier,
  /**
   * The CreateOrderRequestTax model constructor.
   * @property {module:model/CreateOrderRequestTax}
   */
  CreateOrderRequestTax: CreateOrderRequestTax,
  /**
   * The CreateOrderResponse model constructor.
   * @property {module:model/CreateOrderResponse}
   */
  CreateOrderResponse: CreateOrderResponse,
  /**
   * The CreateRefundRequest model constructor.
   * @property {module:model/CreateRefundRequest}
   */
  CreateRefundRequest: CreateRefundRequest,
  /**
   * The CreateRefundResponse model constructor.
   * @property {module:model/CreateRefundResponse}
   */
  CreateRefundResponse: CreateRefundResponse,
  /**
   * The Currency model constructor.
   * @property {module:model/Currency}
   */
  Currency: Currency,
  /**
   * The Customer model constructor.
   * @property {module:model/Customer}
   */
  Customer: Customer,
  /**
   * The CustomerCreationSource model constructor.
   * @property {module:model/CustomerCreationSource}
   */
  CustomerCreationSource: CustomerCreationSource,
  /**
   * The CustomerCreationSourceFilter model constructor.
   * @property {module:model/CustomerCreationSourceFilter}
   */
  CustomerCreationSourceFilter: CustomerCreationSourceFilter,
  /**
   * The CustomerFilter model constructor.
   * @property {module:model/CustomerFilter}
   */
  CustomerFilter: CustomerFilter,
  /**
   * The CustomerGroupInfo model constructor.
   * @property {module:model/CustomerGroupInfo}
   */
  CustomerGroupInfo: CustomerGroupInfo,
  /**
   * The CustomerInclusionExclusion model constructor.
   * @property {module:model/CustomerInclusionExclusion}
   */
  CustomerInclusionExclusion: CustomerInclusionExclusion,
  /**
   * The CustomerPreferences model constructor.
   * @property {module:model/CustomerPreferences}
   */
  CustomerPreferences: CustomerPreferences,
  /**
   * The CustomerQuery model constructor.
   * @property {module:model/CustomerQuery}
   */
  CustomerQuery: CustomerQuery,
  /**
   * The CustomerSort model constructor.
   * @property {module:model/CustomerSort}
   */
  CustomerSort: CustomerSort,
  /**
   * The CustomerSortField model constructor.
   * @property {module:model/CustomerSortField}
   */
  CustomerSortField: CustomerSortField,
  /**
   * The DeleteCatalogObjectRequest model constructor.
   * @property {module:model/DeleteCatalogObjectRequest}
   */
  DeleteCatalogObjectRequest: DeleteCatalogObjectRequest,
  /**
   * The DeleteCatalogObjectResponse model constructor.
   * @property {module:model/DeleteCatalogObjectResponse}
   */
  DeleteCatalogObjectResponse: DeleteCatalogObjectResponse,
  /**
   * The DeleteCustomerCardRequest model constructor.
   * @property {module:model/DeleteCustomerCardRequest}
   */
  DeleteCustomerCardRequest: DeleteCustomerCardRequest,
  /**
   * The DeleteCustomerCardResponse model constructor.
   * @property {module:model/DeleteCustomerCardResponse}
   */
  DeleteCustomerCardResponse: DeleteCustomerCardResponse,
  /**
   * The DeleteCustomerRequest model constructor.
   * @property {module:model/DeleteCustomerRequest}
   */
  DeleteCustomerRequest: DeleteCustomerRequest,
  /**
   * The DeleteCustomerResponse model constructor.
   * @property {module:model/DeleteCustomerResponse}
   */
  DeleteCustomerResponse: DeleteCustomerResponse,
  /**
   * The Device model constructor.
   * @property {module:model/Device}
   */
  Device: Device,
  /**
   * The Error model constructor.
   * @property {module:model/Error}
   */
  Error: Error,
  /**
   * The ErrorCategory model constructor.
   * @property {module:model/ErrorCategory}
   */
  ErrorCategory: ErrorCategory,
  /**
   * The ErrorCode model constructor.
   * @property {module:model/ErrorCode}
   */
  ErrorCode: ErrorCode,
  /**
   * The InventoryAdjustment model constructor.
   * @property {module:model/InventoryAdjustment}
   */
  InventoryAdjustment: InventoryAdjustment,
  /**
   * The InventoryAlertType model constructor.
   * @property {module:model/InventoryAlertType}
   */
  InventoryAlertType: InventoryAlertType,
  /**
   * The InventoryChange model constructor.
   * @property {module:model/InventoryChange}
   */
  InventoryChange: InventoryChange,
  /**
   * The InventoryChangeType model constructor.
   * @property {module:model/InventoryChangeType}
   */
  InventoryChangeType: InventoryChangeType,
  /**
   * The InventoryCount model constructor.
   * @property {module:model/InventoryCount}
   */
  InventoryCount: InventoryCount,
  /**
   * The InventoryPhysicalCount model constructor.
   * @property {module:model/InventoryPhysicalCount}
   */
  InventoryPhysicalCount: InventoryPhysicalCount,
  /**
   * The InventoryState model constructor.
   * @property {module:model/InventoryState}
   */
  InventoryState: InventoryState,
  /**
   * The InventoryTransfer model constructor.
   * @property {module:model/InventoryTransfer}
   */
  InventoryTransfer: InventoryTransfer,
  /**
   * The ItemVariationLocationOverrides model constructor.
   * @property {module:model/ItemVariationLocationOverrides}
   */
  ItemVariationLocationOverrides: ItemVariationLocationOverrides,
  /**
   * The ListAdditionalRecipientReceivableRefundsRequest model constructor.
   * @property {module:model/ListAdditionalRecipientReceivableRefundsRequest}
   */
  ListAdditionalRecipientReceivableRefundsRequest: ListAdditionalRecipientReceivableRefundsRequest,
  /**
   * The ListAdditionalRecipientReceivableRefundsResponse model constructor.
   * @property {module:model/ListAdditionalRecipientReceivableRefundsResponse}
   */
  ListAdditionalRecipientReceivableRefundsResponse: ListAdditionalRecipientReceivableRefundsResponse,
  /**
   * The ListAdditionalRecipientReceivablesRequest model constructor.
   * @property {module:model/ListAdditionalRecipientReceivablesRequest}
   */
  ListAdditionalRecipientReceivablesRequest: ListAdditionalRecipientReceivablesRequest,
  /**
   * The ListAdditionalRecipientReceivablesResponse model constructor.
   * @property {module:model/ListAdditionalRecipientReceivablesResponse}
   */
  ListAdditionalRecipientReceivablesResponse: ListAdditionalRecipientReceivablesResponse,
  /**
   * The ListCatalogRequest model constructor.
   * @property {module:model/ListCatalogRequest}
   */
  ListCatalogRequest: ListCatalogRequest,
  /**
   * The ListCatalogResponse model constructor.
   * @property {module:model/ListCatalogResponse}
   */
  ListCatalogResponse: ListCatalogResponse,
  /**
   * The ListCustomersRequest model constructor.
   * @property {module:model/ListCustomersRequest}
   */
  ListCustomersRequest: ListCustomersRequest,
  /**
   * The ListCustomersResponse model constructor.
   * @property {module:model/ListCustomersResponse}
   */
  ListCustomersResponse: ListCustomersResponse,
  /**
   * The ListLocationsRequest model constructor.
   * @property {module:model/ListLocationsRequest}
   */
  ListLocationsRequest: ListLocationsRequest,
  /**
   * The ListLocationsResponse model constructor.
   * @property {module:model/ListLocationsResponse}
   */
  ListLocationsResponse: ListLocationsResponse,
  /**
   * The ListRefundsRequest model constructor.
   * @property {module:model/ListRefundsRequest}
   */
  ListRefundsRequest: ListRefundsRequest,
  /**
   * The ListRefundsResponse model constructor.
   * @property {module:model/ListRefundsResponse}
   */
  ListRefundsResponse: ListRefundsResponse,
  /**
   * The ListTransactionsRequest model constructor.
   * @property {module:model/ListTransactionsRequest}
   */
  ListTransactionsRequest: ListTransactionsRequest,
  /**
   * The ListTransactionsResponse model constructor.
   * @property {module:model/ListTransactionsResponse}
   */
  ListTransactionsResponse: ListTransactionsResponse,
  /**
   * The Location model constructor.
   * @property {module:model/Location}
   */
  Location: Location,
  /**
   * The LocationCapability model constructor.
   * @property {module:model/LocationCapability}
   */
  LocationCapability: LocationCapability,
  /**
   * The LocationStatus model constructor.
   * @property {module:model/LocationStatus}
   */
  LocationStatus: LocationStatus,
  /**
   * The LocationType model constructor.
   * @property {module:model/LocationType}
   */
  LocationType: LocationType,
  /**
   * The Money model constructor.
   * @property {module:model/Money}
   */
  Money: Money,
  /**
   * The ObtainTokenRequest model constructor.
   * @property {module:model/ObtainTokenRequest}
   */
  ObtainTokenRequest: ObtainTokenRequest,
  /**
   * The ObtainTokenResponse model constructor.
   * @property {module:model/ObtainTokenResponse}
   */
  ObtainTokenResponse: ObtainTokenResponse,
  /**
   * The Order model constructor.
   * @property {module:model/Order}
   */
  Order: Order,
  /**
   * The OrderLineItem model constructor.
   * @property {module:model/OrderLineItem}
   */
  OrderLineItem: OrderLineItem,
  /**
   * The OrderLineItemDiscount model constructor.
   * @property {module:model/OrderLineItemDiscount}
   */
  OrderLineItemDiscount: OrderLineItemDiscount,
  /**
   * The OrderLineItemDiscountScope model constructor.
   * @property {module:model/OrderLineItemDiscountScope}
   */
  OrderLineItemDiscountScope: OrderLineItemDiscountScope,
  /**
   * The OrderLineItemDiscountType model constructor.
   * @property {module:model/OrderLineItemDiscountType}
   */
  OrderLineItemDiscountType: OrderLineItemDiscountType,
  /**
   * The OrderLineItemModifier model constructor.
   * @property {module:model/OrderLineItemModifier}
   */
  OrderLineItemModifier: OrderLineItemModifier,
  /**
   * The OrderLineItemTax model constructor.
   * @property {module:model/OrderLineItemTax}
   */
  OrderLineItemTax: OrderLineItemTax,
  /**
   * The OrderLineItemTaxType model constructor.
   * @property {module:model/OrderLineItemTaxType}
   */
  OrderLineItemTaxType: OrderLineItemTaxType,
  /**
   * The Product model constructor.
   * @property {module:model/Product}
   */
  Product: Product,
  /**
   * The Refund model constructor.
   * @property {module:model/Refund}
   */
  Refund: Refund,
  /**
   * The RefundStatus model constructor.
   * @property {module:model/RefundStatus}
   */
  RefundStatus: RefundStatus,
  /**
   * The RegisterDomainRequest model constructor.
   * @property {module:model/RegisterDomainRequest}
   */
  RegisterDomainRequest: RegisterDomainRequest,
  /**
   * The RegisterDomainResponse model constructor.
   * @property {module:model/RegisterDomainResponse}
   */
  RegisterDomainResponse: RegisterDomainResponse,
  /**
   * The RegisterDomainResponseStatus model constructor.
   * @property {module:model/RegisterDomainResponseStatus}
   */
  RegisterDomainResponseStatus: RegisterDomainResponseStatus,
  /**
   * The RenewTokenRequest model constructor.
   * @property {module:model/RenewTokenRequest}
   */
  RenewTokenRequest: RenewTokenRequest,
  /**
   * The RenewTokenResponse model constructor.
   * @property {module:model/RenewTokenResponse}
   */
  RenewTokenResponse: RenewTokenResponse,
  /**
   * The RetrieveCatalogObjectRequest model constructor.
   * @property {module:model/RetrieveCatalogObjectRequest}
   */
  RetrieveCatalogObjectRequest: RetrieveCatalogObjectRequest,
  /**
   * The RetrieveCatalogObjectResponse model constructor.
   * @property {module:model/RetrieveCatalogObjectResponse}
   */
  RetrieveCatalogObjectResponse: RetrieveCatalogObjectResponse,
  /**
   * The RetrieveCustomerRequest model constructor.
   * @property {module:model/RetrieveCustomerRequest}
   */
  RetrieveCustomerRequest: RetrieveCustomerRequest,
  /**
   * The RetrieveCustomerResponse model constructor.
   * @property {module:model/RetrieveCustomerResponse}
   */
  RetrieveCustomerResponse: RetrieveCustomerResponse,
  /**
   * The RetrieveInventoryAdjustmentRequest model constructor.
   * @property {module:model/RetrieveInventoryAdjustmentRequest}
   */
  RetrieveInventoryAdjustmentRequest: RetrieveInventoryAdjustmentRequest,
  /**
   * The RetrieveInventoryAdjustmentResponse model constructor.
   * @property {module:model/RetrieveInventoryAdjustmentResponse}
   */
  RetrieveInventoryAdjustmentResponse: RetrieveInventoryAdjustmentResponse,
  /**
   * The RetrieveInventoryChangesRequest model constructor.
   * @property {module:model/RetrieveInventoryChangesRequest}
   */
  RetrieveInventoryChangesRequest: RetrieveInventoryChangesRequest,
  /**
   * The RetrieveInventoryChangesResponse model constructor.
   * @property {module:model/RetrieveInventoryChangesResponse}
   */
  RetrieveInventoryChangesResponse: RetrieveInventoryChangesResponse,
  /**
   * The RetrieveInventoryCountRequest model constructor.
   * @property {module:model/RetrieveInventoryCountRequest}
   */
  RetrieveInventoryCountRequest: RetrieveInventoryCountRequest,
  /**
   * The RetrieveInventoryCountResponse model constructor.
   * @property {module:model/RetrieveInventoryCountResponse}
   */
  RetrieveInventoryCountResponse: RetrieveInventoryCountResponse,
  /**
   * The RetrieveInventoryPhysicalCountRequest model constructor.
   * @property {module:model/RetrieveInventoryPhysicalCountRequest}
   */
  RetrieveInventoryPhysicalCountRequest: RetrieveInventoryPhysicalCountRequest,
  /**
   * The RetrieveInventoryPhysicalCountResponse model constructor.
   * @property {module:model/RetrieveInventoryPhysicalCountResponse}
   */
  RetrieveInventoryPhysicalCountResponse: RetrieveInventoryPhysicalCountResponse,
  /**
   * The RetrieveTransactionRequest model constructor.
   * @property {module:model/RetrieveTransactionRequest}
   */
  RetrieveTransactionRequest: RetrieveTransactionRequest,
  /**
   * The RetrieveTransactionResponse model constructor.
   * @property {module:model/RetrieveTransactionResponse}
   */
  RetrieveTransactionResponse: RetrieveTransactionResponse,
  /**
   * The RevokeTokenRequest model constructor.
   * @property {module:model/RevokeTokenRequest}
   */
  RevokeTokenRequest: RevokeTokenRequest,
  /**
   * The RevokeTokenResponse model constructor.
   * @property {module:model/RevokeTokenResponse}
   */
  RevokeTokenResponse: RevokeTokenResponse,
  /**
   * The SearchCatalogObjectsRequest model constructor.
   * @property {module:model/SearchCatalogObjectsRequest}
   */
  SearchCatalogObjectsRequest: SearchCatalogObjectsRequest,
  /**
   * The SearchCatalogObjectsResponse model constructor.
   * @property {module:model/SearchCatalogObjectsResponse}
   */
  SearchCatalogObjectsResponse: SearchCatalogObjectsResponse,
  /**
   * The SearchCustomersRequest model constructor.
   * @property {module:model/SearchCustomersRequest}
   */
  SearchCustomersRequest: SearchCustomersRequest,
  /**
   * The SearchCustomersResponse model constructor.
   * @property {module:model/SearchCustomersResponse}
   */
  SearchCustomersResponse: SearchCustomersResponse,
  /**
   * The SortOrder model constructor.
   * @property {module:model/SortOrder}
   */
  SortOrder: SortOrder,
  /**
   * The SourceApplication model constructor.
   * @property {module:model/SourceApplication}
   */
  SourceApplication: SourceApplication,
  /**
   * The TaxCalculationPhase model constructor.
   * @property {module:model/TaxCalculationPhase}
   */
  TaxCalculationPhase: TaxCalculationPhase,
  /**
   * The TaxInclusionType model constructor.
   * @property {module:model/TaxInclusionType}
   */
  TaxInclusionType: TaxInclusionType,
  /**
   * The Tender model constructor.
   * @property {module:model/Tender}
   */
  Tender: Tender,
  /**
   * The TenderCardDetails model constructor.
   * @property {module:model/TenderCardDetails}
   */
  TenderCardDetails: TenderCardDetails,
  /**
   * The TenderCardDetailsEntryMethod model constructor.
   * @property {module:model/TenderCardDetailsEntryMethod}
   */
  TenderCardDetailsEntryMethod: TenderCardDetailsEntryMethod,
  /**
   * The TenderCardDetailsStatus model constructor.
   * @property {module:model/TenderCardDetailsStatus}
   */
  TenderCardDetailsStatus: TenderCardDetailsStatus,
  /**
   * The TenderCashDetails model constructor.
   * @property {module:model/TenderCashDetails}
   */
  TenderCashDetails: TenderCashDetails,
  /**
   * The TenderType model constructor.
   * @property {module:model/TenderType}
   */
  TenderType: TenderType,
  /**
   * The TimeRange model constructor.
   * @property {module:model/TimeRange}
   */
  TimeRange: TimeRange,
  /**
   * The Transaction model constructor.
   * @property {module:model/Transaction}
   */
  Transaction: Transaction,
  /**
   * The TransactionProduct model constructor.
   * @property {module:model/TransactionProduct}
   */
  TransactionProduct: TransactionProduct,
  /**
   * The UpdateCustomerRequest model constructor.
   * @property {module:model/UpdateCustomerRequest}
   */
  UpdateCustomerRequest: UpdateCustomerRequest,
  /**
   * The UpdateCustomerResponse model constructor.
   * @property {module:model/UpdateCustomerResponse}
   */
  UpdateCustomerResponse: UpdateCustomerResponse,
  /**
   * The UpdateItemModifierListsRequest model constructor.
   * @property {module:model/UpdateItemModifierListsRequest}
   */
  UpdateItemModifierListsRequest: UpdateItemModifierListsRequest,
  /**
   * The UpdateItemModifierListsResponse model constructor.
   * @property {module:model/UpdateItemModifierListsResponse}
   */
  UpdateItemModifierListsResponse: UpdateItemModifierListsResponse,
  /**
   * The UpdateItemTaxesRequest model constructor.
   * @property {module:model/UpdateItemTaxesRequest}
   */
  UpdateItemTaxesRequest: UpdateItemTaxesRequest,
  /**
   * The UpdateItemTaxesResponse model constructor.
   * @property {module:model/UpdateItemTaxesResponse}
   */
  UpdateItemTaxesResponse: UpdateItemTaxesResponse,
  /**
   * The UpsertCatalogObjectRequest model constructor.
   * @property {module:model/UpsertCatalogObjectRequest}
   */
  UpsertCatalogObjectRequest: UpsertCatalogObjectRequest,
  /**
   * The UpsertCatalogObjectResponse model constructor.
   * @property {module:model/UpsertCatalogObjectResponse}
   */
  UpsertCatalogObjectResponse: UpsertCatalogObjectResponse,
  /**
   * The V1AdjustInventoryRequest model constructor.
   * @property {module:model/V1AdjustInventoryRequest}
   */
  V1AdjustInventoryRequest: V1AdjustInventoryRequest,
  /**
   * The V1BankAccount model constructor.
   * @property {module:model/V1BankAccount}
   */
  V1BankAccount: V1BankAccount,
  /**
   * The V1CashDrawerEvent model constructor.
   * @property {module:model/V1CashDrawerEvent}
   */
  V1CashDrawerEvent: V1CashDrawerEvent,
  /**
   * The V1CashDrawerShift model constructor.
   * @property {module:model/V1CashDrawerShift}
   */
  V1CashDrawerShift: V1CashDrawerShift,
  /**
   * The V1Category model constructor.
   * @property {module:model/V1Category}
   */
  V1Category: V1Category,
  /**
   * The V1CreateRefundRequest model constructor.
   * @property {module:model/V1CreateRefundRequest}
   */
  V1CreateRefundRequest: V1CreateRefundRequest,
  /**
   * The V1Discount model constructor.
   * @property {module:model/V1Discount}
   */
  V1Discount: V1Discount,
  /**
   * The V1Employee model constructor.
   * @property {module:model/V1Employee}
   */
  V1Employee: V1Employee,
  /**
   * The V1EmployeeRole model constructor.
   * @property {module:model/V1EmployeeRole}
   */
  V1EmployeeRole: V1EmployeeRole,
  /**
   * The V1Fee model constructor.
   * @property {module:model/V1Fee}
   */
  V1Fee: V1Fee,
  /**
   * The V1InventoryEntry model constructor.
   * @property {module:model/V1InventoryEntry}
   */
  V1InventoryEntry: V1InventoryEntry,
  /**
   * The V1Item model constructor.
   * @property {module:model/V1Item}
   */
  V1Item: V1Item,
  /**
   * The V1ItemImage model constructor.
   * @property {module:model/V1ItemImage}
   */
  V1ItemImage: V1ItemImage,
  /**
   * The V1Merchant model constructor.
   * @property {module:model/V1Merchant}
   */
  V1Merchant: V1Merchant,
  /**
   * The V1MerchantLocationDetails model constructor.
   * @property {module:model/V1MerchantLocationDetails}
   */
  V1MerchantLocationDetails: V1MerchantLocationDetails,
  /**
   * The V1ModifierList model constructor.
   * @property {module:model/V1ModifierList}
   */
  V1ModifierList: V1ModifierList,
  /**
   * The V1ModifierOption model constructor.
   * @property {module:model/V1ModifierOption}
   */
  V1ModifierOption: V1ModifierOption,
  /**
   * The V1Money model constructor.
   * @property {module:model/V1Money}
   */
  V1Money: V1Money,
  /**
   * The V1Order model constructor.
   * @property {module:model/V1Order}
   */
  V1Order: V1Order,
  /**
   * The V1OrderHistoryEntry model constructor.
   * @property {module:model/V1OrderHistoryEntry}
   */
  V1OrderHistoryEntry: V1OrderHistoryEntry,
  /**
   * The V1Page model constructor.
   * @property {module:model/V1Page}
   */
  V1Page: V1Page,
  /**
   * The V1PageCell model constructor.
   * @property {module:model/V1PageCell}
   */
  V1PageCell: V1PageCell,
  /**
   * The V1Payment model constructor.
   * @property {module:model/V1Payment}
   */
  V1Payment: V1Payment,
  /**
   * The V1PaymentDiscount model constructor.
   * @property {module:model/V1PaymentDiscount}
   */
  V1PaymentDiscount: V1PaymentDiscount,
  /**
   * The V1PaymentItemDetail model constructor.
   * @property {module:model/V1PaymentItemDetail}
   */
  V1PaymentItemDetail: V1PaymentItemDetail,
  /**
   * The V1PaymentItemization model constructor.
   * @property {module:model/V1PaymentItemization}
   */
  V1PaymentItemization: V1PaymentItemization,
  /**
   * The V1PaymentModifier model constructor.
   * @property {module:model/V1PaymentModifier}
   */
  V1PaymentModifier: V1PaymentModifier,
  /**
   * The V1PaymentSurcharge model constructor.
   * @property {module:model/V1PaymentSurcharge}
   */
  V1PaymentSurcharge: V1PaymentSurcharge,
  /**
   * The V1PaymentTax model constructor.
   * @property {module:model/V1PaymentTax}
   */
  V1PaymentTax: V1PaymentTax,
  /**
   * The V1PhoneNumber model constructor.
   * @property {module:model/V1PhoneNumber}
   */
  V1PhoneNumber: V1PhoneNumber,
  /**
   * The V1Refund model constructor.
   * @property {module:model/V1Refund}
   */
  V1Refund: V1Refund,
  /**
   * The V1Settlement model constructor.
   * @property {module:model/V1Settlement}
   */
  V1Settlement: V1Settlement,
  /**
   * The V1SettlementEntry model constructor.
   * @property {module:model/V1SettlementEntry}
   */
  V1SettlementEntry: V1SettlementEntry,
  /**
   * The V1Tender model constructor.
   * @property {module:model/V1Tender}
   */
  V1Tender: V1Tender,
  /**
   * The V1Timecard model constructor.
   * @property {module:model/V1Timecard}
   */
  V1Timecard: V1Timecard,
  /**
   * The V1TimecardEvent model constructor.
   * @property {module:model/V1TimecardEvent}
   */
  V1TimecardEvent: V1TimecardEvent,
  /**
   * The V1UpdateModifierListRequest model constructor.
   * @property {module:model/V1UpdateModifierListRequest}
   */
  V1UpdateModifierListRequest: V1UpdateModifierListRequest,
  /**
   * The V1UpdateOrderRequest model constructor.
   * @property {module:model/V1UpdateOrderRequest}
   */
  V1UpdateOrderRequest: V1UpdateOrderRequest,
  /**
   * The V1Variation model constructor.
   * @property {module:model/V1Variation}
   */
  V1Variation: V1Variation,
  /**
   * The VoidTransactionRequest model constructor.
   * @property {module:model/VoidTransactionRequest}
   */
  VoidTransactionRequest: VoidTransactionRequest,
  /**
   * The VoidTransactionResponse model constructor.
   * @property {module:model/VoidTransactionResponse}
   */
  VoidTransactionResponse: VoidTransactionResponse,
  /**
   * The ApplePayApi service constructor.
   * @property {module:api/ApplePayApi}
   */
  ApplePayApi: ApplePayApi,
  /**
   * The CatalogApi service constructor.
   * @property {module:api/CatalogApi}
   */
  CatalogApi: CatalogApi,
  /**
   * The CheckoutApi service constructor.
   * @property {module:api/CheckoutApi}
   */
  CheckoutApi: CheckoutApi,
  /**
   * The CustomersApi service constructor.
   * @property {module:api/CustomersApi}
   */
  CustomersApi: CustomersApi,
  /**
   * The InventoryApi service constructor.
   * @property {module:api/InventoryApi}
   */
  InventoryApi: InventoryApi,
  /**
   * The LocationsApi service constructor.
   * @property {module:api/LocationsApi}
   */
  LocationsApi: LocationsApi,
  /**
   * The MobileAuthorizationApi service constructor.
   * @property {module:api/MobileAuthorizationApi}
   */
  MobileAuthorizationApi: MobileAuthorizationApi,
  /**
   * The OAuthApi service constructor.
   * @property {module:api/OAuthApi}
   */
  OAuthApi: OAuthApi,
  /**
   * The OrdersApi service constructor.
   * @property {module:api/OrdersApi}
   */
  OrdersApi: OrdersApi,
  /**
   * The ReportingApi service constructor.
   * @property {module:api/ReportingApi}
   */
  ReportingApi: ReportingApi,
  /**
   * The TransactionsApi service constructor.
   * @property {module:api/TransactionsApi}
   */
  TransactionsApi: TransactionsApi,
  /**
   * The V1EmployeesApi service constructor.
   * @property {module:api/V1EmployeesApi}
   */
  V1EmployeesApi: V1EmployeesApi,
  /**
   * The V1ItemsApi service constructor.
   * @property {module:api/V1ItemsApi}
   */
  V1ItemsApi: V1ItemsApi,
  /**
   * The V1LocationsApi service constructor.
   * @property {module:api/V1LocationsApi}
   */
  V1LocationsApi: V1LocationsApi,
  /**
   * The V1TransactionsApi service constructor.
   * @property {module:api/V1TransactionsApi}
   */
  V1TransactionsApi: V1TransactionsApi
};
