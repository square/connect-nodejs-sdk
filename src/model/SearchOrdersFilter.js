/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
var ApiClient = require('../ApiClient');
var SearchOrdersCustomerFilter = require('./SearchOrdersCustomerFilter');
var SearchOrdersDateTimeFilter = require('./SearchOrdersDateTimeFilter');
var SearchOrdersFulfillmentFilter = require('./SearchOrdersFulfillmentFilter');
var SearchOrdersSourceFilter = require('./SearchOrdersSourceFilter');
var SearchOrdersStateFilter = require('./SearchOrdersStateFilter');




/**
 * The SearchOrdersFilter model module.
 * @module model/SearchOrdersFilter
 */

/**
 * Constructs a new <code>SearchOrdersFilter</code>.
 * Filtering criteria to use for a SearchOrders request. Multiple filters will be ANDed together.
 * @alias module:model/SearchOrdersFilter
 * @class
 */
var exports = function() {
  var _this = this;






};

/**
 * Constructs a <code>SearchOrdersFilter</code> from a plain JavaScript object, optionally creating a new instance.
 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
 * @param {Object} data The plain JavaScript object bearing properties of interest.
 * @param {module:model/SearchOrdersFilter} obj Optional instance to populate.
 * @return {module:model/SearchOrdersFilter} The populated <code>SearchOrdersFilter</code> instance.
 */
exports.constructFromObject = function(data, obj) {
  if (data) {
    obj = obj || new exports();

      if (data.hasOwnProperty('state_filter')) {
      obj['state_filter'] = SearchOrdersStateFilter.constructFromObject(data['state_filter']);
    }
      if (data.hasOwnProperty('date_time_filter')) {
      obj['date_time_filter'] = SearchOrdersDateTimeFilter.constructFromObject(data['date_time_filter']);
    }
      if (data.hasOwnProperty('fulfillment_filter')) {
      obj['fulfillment_filter'] = SearchOrdersFulfillmentFilter.constructFromObject(data['fulfillment_filter']);
    }
      if (data.hasOwnProperty('source_filter')) {
      obj['source_filter'] = SearchOrdersSourceFilter.constructFromObject(data['source_filter']);
    }
      if (data.hasOwnProperty('customer_filter')) {
      obj['customer_filter'] = SearchOrdersCustomerFilter.constructFromObject(data['customer_filter']);
    }
    }
  return obj;
}

/**
 * Filter by [`OrderState`](#type-orderstate).
 * @member {module:model/SearchOrdersStateFilter} state_filter
 */
exports.prototype['state_filter'] = undefined;
/**
 * Filter for results within a time range.  __Important:__ If you filter for orders by time range, you must set SearchOrdersSort to sort by the same field. [Learn more about filtering orders by time range](/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range)
 * @member {module:model/SearchOrdersDateTimeFilter} date_time_filter
 */
exports.prototype['date_time_filter'] = undefined;
/**
 * Filter by fulfillment type or state.
 * @member {module:model/SearchOrdersFulfillmentFilter} fulfillment_filter
 */
exports.prototype['fulfillment_filter'] = undefined;
/**
 * Filter by source of order.
 * @member {module:model/SearchOrdersSourceFilter} source_filter
 */
exports.prototype['source_filter'] = undefined;
/**
 * Filter by customers associated with the order.
 * @member {module:model/SearchOrdersCustomerFilter} customer_filter
 */
exports.prototype['customer_filter'] = undefined;



module.exports = exports;



