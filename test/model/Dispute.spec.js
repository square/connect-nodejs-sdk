/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
const SquareConnect = require('../../src/index');

describe('Dispute', function() {
  beforeEach(function() {
    this.api = new SquareConnect.Dispute();
  });

  it('should create an instance of Dispute', function() {
    // uncomment below and update the code to test Dispute
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be.a(SquareConnect.Dispute);
  });

  it('should have the property disputeId (base name: "dispute_id")', function() {
    // uncomment below and update the code to test the property disputeId
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property amountMoney (base name: "amount_money")', function() {
    // uncomment below and update the code to test the property amountMoney
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property reason (base name: "reason")', function() {
    // uncomment below and update the code to test the property reason
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property state (base name: "state")', function() {
    // uncomment below and update the code to test the property state
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property dueAt (base name: "due_at")', function() {
    // uncomment below and update the code to test the property dueAt
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property disputedPayment (base name: "disputed_payment")', function() {
    // uncomment below and update the code to test the property disputedPayment
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property evidenceIds (base name: "evidence_ids")', function() {
    // uncomment below and update the code to test the property evidenceIds
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property cardBrand (base name: "card_brand")', function() {
    // uncomment below and update the code to test the property cardBrand
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property createdAt (base name: "created_at")', function() {
    // uncomment below and update the code to test the property createdAt
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property updatedAt (base name: "updated_at")', function() {
    // uncomment below and update the code to test the property updatedAt
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property brandDisputeId (base name: "brand_dispute_id")', function() {
    // uncomment below and update the code to test the property brandDisputeId
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property reportedDate (base name: "reported_date")', function() {
    // uncomment below and update the code to test the property reportedDate
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property version (base name: "version")', function() {
    // uncomment below and update the code to test the property version
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
  it('should have the property locationId (base name: "location_id")', function() {
    // uncomment below and update the code to test the property locationId
    //var instance = new SquareConnect.Dispute();
    //expect(instance).to.be();
  });
});
