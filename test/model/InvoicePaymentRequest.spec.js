/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
const SquareConnect = require('../../src/index');

describe('InvoicePaymentRequest', function() {
  beforeEach(function() {
    this.api = new SquareConnect.InvoicePaymentRequest();
  });

  it('should create an instance of InvoicePaymentRequest', function() {
    // uncomment below and update the code to test InvoicePaymentRequest
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be.a(SquareConnect.InvoicePaymentRequest);
  });

  it('should have the property uid (base name: "uid")', function() {
    // uncomment below and update the code to test the property uid
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property requestMethod (base name: "request_method")', function() {
    // uncomment below and update the code to test the property requestMethod
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property requestType (base name: "request_type")', function() {
    // uncomment below and update the code to test the property requestType
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property dueDate (base name: "due_date")', function() {
    // uncomment below and update the code to test the property dueDate
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property fixedAmountRequestedMoney (base name: "fixed_amount_requested_money")', function() {
    // uncomment below and update the code to test the property fixedAmountRequestedMoney
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property percentageRequested (base name: "percentage_requested")', function() {
    // uncomment below and update the code to test the property percentageRequested
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property tippingEnabled (base name: "tipping_enabled")', function() {
    // uncomment below and update the code to test the property tippingEnabled
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property cardId (base name: "card_id")', function() {
    // uncomment below and update the code to test the property cardId
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property reminders (base name: "reminders")', function() {
    // uncomment below and update the code to test the property reminders
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property computedAmountMoney (base name: "computed_amount_money")', function() {
    // uncomment below and update the code to test the property computedAmountMoney
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property totalCompletedAmountMoney (base name: "total_completed_amount_money")', function() {
    // uncomment below and update the code to test the property totalCompletedAmountMoney
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property roundingAdjustmentIncludedMoney (base name: "rounding_adjustment_included_money")', function() {
    // uncomment below and update the code to test the property roundingAdjustmentIncludedMoney
    //var instance = new SquareConnect.InvoicePaymentRequest();
    //expect(instance).to.be();
  });
});
