/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
const SquareConnect = require('../../src/index');

describe('CreatePaymentRequest', function() {
  beforeEach(function() {
    this.api = new SquareConnect.CreatePaymentRequest();
  });

  it('should create an instance of CreatePaymentRequest', function() {
    // uncomment below and update the code to test CreatePaymentRequest
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be.a(SquareConnect.CreatePaymentRequest);
  });

  it('should have the property sourceId (base name: "source_id")', function() {
    // uncomment below and update the code to test the property sourceId
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property idempotencyKey (base name: "idempotency_key")', function() {
    // uncomment below and update the code to test the property idempotencyKey
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property amountMoney (base name: "amount_money")', function() {
    // uncomment below and update the code to test the property amountMoney
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property tipMoney (base name: "tip_money")', function() {
    // uncomment below and update the code to test the property tipMoney
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property appFeeMoney (base name: "app_fee_money")', function() {
    // uncomment below and update the code to test the property appFeeMoney
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property autocomplete (base name: "autocomplete")', function() {
    // uncomment below and update the code to test the property autocomplete
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property orderId (base name: "order_id")', function() {
    // uncomment below and update the code to test the property orderId
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property customerId (base name: "customer_id")', function() {
    // uncomment below and update the code to test the property customerId
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property locationId (base name: "location_id")', function() {
    // uncomment below and update the code to test the property locationId
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property referenceId (base name: "reference_id")', function() {
    // uncomment below and update the code to test the property referenceId
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property verificationToken (base name: "verification_token")', function() {
    // uncomment below and update the code to test the property verificationToken
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property acceptPartialAuthorization (base name: "accept_partial_authorization")', function() {
    // uncomment below and update the code to test the property acceptPartialAuthorization
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property buyerEmailAddress (base name: "buyer_email_address")', function() {
    // uncomment below and update the code to test the property buyerEmailAddress
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property billingAddress (base name: "billing_address")', function() {
    // uncomment below and update the code to test the property billingAddress
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property shippingAddress (base name: "shipping_address")', function() {
    // uncomment below and update the code to test the property shippingAddress
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
  it('should have the property note (base name: "note")', function() {
    // uncomment below and update the code to test the property note
    //var instance = new SquareConnect.CreatePaymentRequest();
    //expect(instance).to.be();
  });
});
