/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */

const SquareConnect = require('../../src/index');

describe('CatalogItem', function() {
  beforeEach(function() {
    this.api = new SquareConnect.CatalogItem();
  });

  it('should create an instance of CatalogItem', function() {
    // uncomment below and update the code to test CatalogItem
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be.a(SquareConnect.CatalogItem);
  });

  it('should have the property name (base name: "name")', function() {
    // uncomment below and update the code to test the property name
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property description (base name: "description")', function() {
    // uncomment below and update the code to test the property description
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property abbreviation (base name: "abbreviation")', function() {
    // uncomment below and update the code to test the property abbreviation
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property labelColor (base name: "label_color")', function() {
    // uncomment below and update the code to test the property labelColor
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property availableOnline (base name: "available_online")', function() {
    // uncomment below and update the code to test the property availableOnline
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property availableForPickup (base name: "available_for_pickup")', function() {
    // uncomment below and update the code to test the property availableForPickup
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property availableElectronically (base name: "available_electronically")', function() {
    // uncomment below and update the code to test the property availableElectronically
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property categoryId (base name: "category_id")', function() {
    // uncomment below and update the code to test the property categoryId
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property taxIds (base name: "tax_ids")', function() {
    // uncomment below and update the code to test the property taxIds
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property modifierListInfo (base name: "modifier_list_info")', function() {
    // uncomment below and update the code to test the property modifierListInfo
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property imageUrl (base name: "image_url")', function() {
    // uncomment below and update the code to test the property imageUrl
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property variations (base name: "variations")', function() {
    // uncomment below and update the code to test the property variations
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property productType (base name: "product_type")', function() {
    // uncomment below and update the code to test the property productType
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
  it('should have the property skipModifierScreen (base name: "skip_modifier_screen")', function() {
    // uncomment below and update the code to test the property skipModifierScreen
    //var instance = new SquareConnect.CatalogItem();
    //expect(instance).to.be();
  });
});

