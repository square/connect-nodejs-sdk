/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */

const SquareConnect = require('../../src/index');

describe('V1Order', function() {
  beforeEach(function() {
    this.api = new SquareConnect.V1Order();
  });

  it('should create an instance of V1Order', function() {
    // uncomment below and update the code to test V1Order
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be.a(SquareConnect.V1Order);
  });

  it('should have the property errors (base name: "errors")', function() {
    // uncomment below and update the code to test the property errors
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property id (base name: "id")', function() {
    // uncomment below and update the code to test the property id
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property buyerEmail (base name: "buyer_email")', function() {
    // uncomment below and update the code to test the property buyerEmail
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property recipientName (base name: "recipient_name")', function() {
    // uncomment below and update the code to test the property recipientName
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property recipientPhoneNumber (base name: "recipient_phone_number")', function() {
    // uncomment below and update the code to test the property recipientPhoneNumber
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property state (base name: "state")', function() {
    // uncomment below and update the code to test the property state
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property shippingAddress (base name: "shipping_address")', function() {
    // uncomment below and update the code to test the property shippingAddress
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property subtotalMoney (base name: "subtotal_money")', function() {
    // uncomment below and update the code to test the property subtotalMoney
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property totalShippingMoney (base name: "total_shipping_money")', function() {
    // uncomment below and update the code to test the property totalShippingMoney
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property totalTaxMoney (base name: "total_tax_money")', function() {
    // uncomment below and update the code to test the property totalTaxMoney
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property totalPriceMoney (base name: "total_price_money")', function() {
    // uncomment below and update the code to test the property totalPriceMoney
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property totalDiscountMoney (base name: "total_discount_money")', function() {
    // uncomment below and update the code to test the property totalDiscountMoney
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property createdAt (base name: "created_at")', function() {
    // uncomment below and update the code to test the property createdAt
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property updatedAt (base name: "updated_at")', function() {
    // uncomment below and update the code to test the property updatedAt
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property expiresAt (base name: "expires_at")', function() {
    // uncomment below and update the code to test the property expiresAt
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property paymentId (base name: "payment_id")', function() {
    // uncomment below and update the code to test the property paymentId
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property buyerNote (base name: "buyer_note")', function() {
    // uncomment below and update the code to test the property buyerNote
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property completedNote (base name: "completed_note")', function() {
    // uncomment below and update the code to test the property completedNote
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property refundedNote (base name: "refunded_note")', function() {
    // uncomment below and update the code to test the property refundedNote
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property canceledNote (base name: "canceled_note")', function() {
    // uncomment below and update the code to test the property canceledNote
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property tender (base name: "tender")', function() {
    // uncomment below and update the code to test the property tender
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property orderHistory (base name: "order_history")', function() {
    // uncomment below and update the code to test the property orderHistory
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property promoCode (base name: "promo_code")', function() {
    // uncomment below and update the code to test the property promoCode
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property btcReceiveAddress (base name: "btc_receive_address")', function() {
    // uncomment below and update the code to test the property btcReceiveAddress
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
  it('should have the property btcPriceSatoshi (base name: "btc_price_satoshi")', function() {
    // uncomment below and update the code to test the property btcPriceSatoshi
    //var instance = new SquareConnect.V1Order();
    //expect(instance).to.be();
  });
});

