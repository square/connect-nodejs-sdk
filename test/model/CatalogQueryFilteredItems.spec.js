/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
const SquareConnect = require('../../src/index');

describe('CatalogQueryFilteredItems', function() {
  beforeEach(function() {
    // this.api = new SquareConnect.CatalogQueryFilteredItems();
  });

  it('should create an instance of CatalogQueryFilteredItems', function() {
    // uncomment below and update the code to test CatalogQueryFilteredItems
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be.a(SquareConnect.CatalogQueryFilteredItems);
  });

  it('should have the property textFilter (base name: "text_filter")', function() {
    // uncomment below and update the code to test the property textFilter
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be();
  });
  it('should have the property searchVendorCode (base name: "search_vendor_code")', function() {
    // uncomment below and update the code to test the property searchVendorCode
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be();
  });
  it('should have the property categoryIds (base name: "category_ids")', function() {
    // uncomment below and update the code to test the property categoryIds
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be();
  });
  it('should have the property stockLevels (base name: "stock_levels")', function() {
    // uncomment below and update the code to test the property stockLevels
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be();
  });
  it('should have the property enabledLocationIds (base name: "enabled_location_ids")', function() {
    // uncomment below and update the code to test the property enabledLocationIds
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be();
  });
  it('should have the property vendorIds (base name: "vendor_ids")', function() {
    // uncomment below and update the code to test the property vendorIds
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be();
  });
  it('should have the property productTypes (base name: "product_types")', function() {
    // uncomment below and update the code to test the property productTypes
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be();
  });
  it('should have the property customAttributeFilters (base name: "custom_attribute_filters")', function() {
    // uncomment below and update the code to test the property customAttributeFilters
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be();
  });
  it('should have the property doesNotExist (base name: "does_not_exist")', function() {
    // uncomment below and update the code to test the property doesNotExist
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be();
  });
  it('should have the property sortOrder (base name: "sort_order")', function() {
    // uncomment below and update the code to test the property sortOrder
    //var instance = new SquareConnect.CatalogQueryFilteredItems();
    //expect(instance).to.be();
  });
});
