/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
const SquareConnect = require('../../src/index');

describe('SearchOrdersRequest', function() {
  beforeEach(function() {
    this.api = new SquareConnect.SearchOrdersRequest();
  });

  it('should create an instance of SearchOrdersRequest', function() {
    // uncomment below and update the code to test SearchOrdersRequest
    //var instance = new SquareConnect.SearchOrdersRequest();
    //expect(instance).to.be.a(SquareConnect.SearchOrdersRequest);
  });

  it('should have the property locationIds (base name: "location_ids")', function() {
    // uncomment below and update the code to test the property locationIds
    //var instance = new SquareConnect.SearchOrdersRequest();
    //expect(instance).to.be();
  });
  it('should have the property cursor (base name: "cursor")', function() {
    // uncomment below and update the code to test the property cursor
    //var instance = new SquareConnect.SearchOrdersRequest();
    //expect(instance).to.be();
  });
  it('should have the property query (base name: "query")', function() {
    // uncomment below and update the code to test the property query
    //var instance = new SquareConnect.SearchOrdersRequest();
    //expect(instance).to.be();
  });
  it('should have the property limit (base name: "limit")', function() {
    // uncomment below and update the code to test the property limit
    //var instance = new SquareConnect.SearchOrdersRequest();
    //expect(instance).to.be();
  });
  it('should have the property returnEntries (base name: "return_entries")', function() {
    // uncomment below and update the code to test the property returnEntries
    //var instance = new SquareConnect.SearchOrdersRequest();
    //expect(instance).to.be();
  });
});
