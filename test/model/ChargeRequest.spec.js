/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */

const SquareConnect = require('../../src/index');

describe('ChargeRequest', function() {
  beforeEach(function() {
    this.api = new SquareConnect.ChargeRequest();
  });

  it('should create an instance of ChargeRequest', function() {
    // uncomment below and update the code to test ChargeRequest
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be.a(SquareConnect.ChargeRequest);
  });

  it('should have the property idempotencyKey (base name: "idempotency_key")', function() {
    // uncomment below and update the code to test the property idempotencyKey
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property amountMoney (base name: "amount_money")', function() {
    // uncomment below and update the code to test the property amountMoney
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property cardNonce (base name: "card_nonce")', function() {
    // uncomment below and update the code to test the property cardNonce
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property customerCardId (base name: "customer_card_id")', function() {
    // uncomment below and update the code to test the property customerCardId
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property delayCapture (base name: "delay_capture")', function() {
    // uncomment below and update the code to test the property delayCapture
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property referenceId (base name: "reference_id")', function() {
    // uncomment below and update the code to test the property referenceId
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property note (base name: "note")', function() {
    // uncomment below and update the code to test the property note
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property customerId (base name: "customer_id")', function() {
    // uncomment below and update the code to test the property customerId
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property billingAddress (base name: "billing_address")', function() {
    // uncomment below and update the code to test the property billingAddress
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property shippingAddress (base name: "shipping_address")', function() {
    // uncomment below and update the code to test the property shippingAddress
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property buyerEmailAddress (base name: "buyer_email_address")', function() {
    // uncomment below and update the code to test the property buyerEmailAddress
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property orderId (base name: "order_id")', function() {
    // uncomment below and update the code to test the property orderId
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
  it('should have the property additionalRecipients (base name: "additional_recipients")', function() {
    // uncomment below and update the code to test the property additionalRecipients
    //var instance = new SquareConnect.ChargeRequest();
    //expect(instance).to.be();
  });
});

