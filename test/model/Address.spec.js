/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */

const SquareConnect = require('../../src/index');

describe('Address', function() {
  beforeEach(function() {
    this.api = new SquareConnect.Address();
  });

  it('should create an instance of Address', function() {
    // uncomment below and update the code to test Address
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be.a(SquareConnect.Address);
  });

  it('should have the property addressLine1 (base name: "address_line_1")', function() {
    // uncomment below and update the code to test the property addressLine1
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property addressLine2 (base name: "address_line_2")', function() {
    // uncomment below and update the code to test the property addressLine2
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property addressLine3 (base name: "address_line_3")', function() {
    // uncomment below and update the code to test the property addressLine3
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property locality (base name: "locality")', function() {
    // uncomment below and update the code to test the property locality
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property sublocality (base name: "sublocality")', function() {
    // uncomment below and update the code to test the property sublocality
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property sublocality2 (base name: "sublocality_2")', function() {
    // uncomment below and update the code to test the property sublocality2
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property sublocality3 (base name: "sublocality_3")', function() {
    // uncomment below and update the code to test the property sublocality3
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property administrativeDistrictLevel1 (base name: "administrative_district_level_1")', function() {
    // uncomment below and update the code to test the property administrativeDistrictLevel1
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property administrativeDistrictLevel2 (base name: "administrative_district_level_2")', function() {
    // uncomment below and update the code to test the property administrativeDistrictLevel2
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property administrativeDistrictLevel3 (base name: "administrative_district_level_3")', function() {
    // uncomment below and update the code to test the property administrativeDistrictLevel3
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property postalCode (base name: "postal_code")', function() {
    // uncomment below and update the code to test the property postalCode
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property country (base name: "country")', function() {
    // uncomment below and update the code to test the property country
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property firstName (base name: "first_name")', function() {
    // uncomment below and update the code to test the property firstName
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property lastName (base name: "last_name")', function() {
    // uncomment below and update the code to test the property lastName
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
  it('should have the property organization (base name: "organization")', function() {
    // uncomment below and update the code to test the property organization
    //var instance = new SquareConnect.Address();
    //expect(instance).to.be();
  });
});

