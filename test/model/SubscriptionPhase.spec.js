/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
const SquareConnect = require('../../src/index');

describe('SubscriptionPhase', function() {
  beforeEach(function() {
    this.api = new SquareConnect.SubscriptionPhase();
  });

  it('should create an instance of SubscriptionPhase', function() {
    // uncomment below and update the code to test SubscriptionPhase
    //var instance = new SquareConnect.SubscriptionPhase();
    //expect(instance).to.be.a(SquareConnect.SubscriptionPhase);
  });

  it('should have the property uid (base name: "uid")', function() {
    // uncomment below and update the code to test the property uid
    //var instance = new SquareConnect.SubscriptionPhase();
    //expect(instance).to.be();
  });
  it('should have the property cadence (base name: "cadence")', function() {
    // uncomment below and update the code to test the property cadence
    //var instance = new SquareConnect.SubscriptionPhase();
    //expect(instance).to.be();
  });
  it('should have the property periods (base name: "periods")', function() {
    // uncomment below and update the code to test the property periods
    //var instance = new SquareConnect.SubscriptionPhase();
    //expect(instance).to.be();
  });
  it('should have the property recurringPriceMoney (base name: "recurring_price_money")', function() {
    // uncomment below and update the code to test the property recurringPriceMoney
    //var instance = new SquareConnect.SubscriptionPhase();
    //expect(instance).to.be();
  });
  it('should have the property ordinal (base name: "ordinal")', function() {
    // uncomment below and update the code to test the property ordinal
    //var instance = new SquareConnect.SubscriptionPhase();
    //expect(instance).to.be();
  });
});
